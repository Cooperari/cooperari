<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.cooperari</groupId>
	<artifactId>cooperari</artifactId>
	<version>0.2.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Cooperari</name>
	<description>Cooperari is a cooperative testing tool for multithreaded Java code.</description>
	<url>http://cooperari.org</url>

	<repositories>
		<repository>
			<id>maven-central</id>
			<name>Maven Central</name>
			<url>http://maven.org</url>
		</repository>
		<repository>
			<id>alternate-repository</id>
			<name>MVN repository</name>
			<url>http://mvnrepository.com</url>
		</repository>
	</repositories>

	<properties>
		<required.maven>3.2</required.maven>
		<required.java>1.8</required.java>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.5</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>1.8.5</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.5</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<fail>true</fail>
							<failFast>true</failFast>
							<rules>
								<requireMavenVersion>
									<message>Maven version ${required.maven} or higher is required!
										Maven version ${maven.version} detected ...
									</message>
									<version>${required.maven}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<message>Java version ${required.java} or higher is required!
										Version ${java.version} detected ...
									</message>
									<version>${required.java}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<configuration>
					<ignoreMissingFile>false</ignoreMissingFile>
					<regex>false</regex>
					<replacements>
						<replacement>
							<token>@cooperari.version@</token>
							<value>${project.version}</value>
						</replacement>
						<replacement>
							<token>@build.os@</token>
							<value>${os.name} ${os.version} ${os.arch}</value>
						</replacement>
						<replacement>
							<token>@build.maven.version@</token>
							<value>${maven.version}</value>
						</replacement>
						<replacement>
							<token>@build.java.version@</token>
							<value>${java.version}</value>
						</replacement>
						<replacement>
							<token>@build.java.vm@</token>
							<value>${java.vm.name}</value>
						</replacement>
					</replacements>
				</configuration>
				<executions>
					<execution>
						<id>version-class</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>src/main/java/org/cooperari/CVersion.java.template</file>
							<outputFile>src/main/java/org/cooperari/CVersion.java</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>create-cversion-script</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<ignoreMissingFile>false</ignoreMissingFile>
							<file>src/main/scripts/cversion.template</file>
							<outputFile>src/main/scripts/cversion</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<fork>true</fork>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${required.java}</source>
					<target>${required.java}</target>
					<testSource>${required.java}</testSource>
					<testTarget>${required.java}</testTarget>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<id>setup-cooperative-tests</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<classpathScope>test</classpathScope>
							<workingDirectory>${project.build.directory}/.cooperari</workingDirectory>
							<outputFile>${project.build.directory}/.cooperari/prepare-test-setup.txt</outputFile>
							<arguments>
								<argument>-classpath</argument>
								<classpath/>
								<argument>org.cooperari.tools.csetup.Main</argument>
								<argument>-v</argument>
								<argument>-d</argument>
								<argument>.</argument>
								<argument>-Xd</argument>
								<argument>-Xk</argument>
								<argument>org.cooperari.sanity.feature.Data</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>cooperative-tests</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
						    <executable>java</executable>
<!-- 						    <outputFile>${project.build.directory}/test-execution/output.txt</outputFile> -->
						    <workingDirectory>${project.build.directory}/test-execution</workingDirectory>
							<classpathScope>test</classpathScope>
							<commandlineArgs>-classpath ${project.build.directory}/.cooperari/org.cooperari.sanity.feature.Data-cooperari.jar:%classpath -javaagent:${org.aspectj:aspectjweaver:jar} -Daj.class.path=${project.build.directory}/.cooperari/org.cooperari.sanity.feature.Data-cooperari.jar:%classpath org.cooperari.tools.cjunit.Main org.cooperari.sanity.AllCooperativeTests</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			 	<version>2.18</version>
				<configuration>
					<skipTests>false</skipTests>
				  	<forkCount>1</forkCount>
				  	<enableAssertions>false</enableAssertions>
				   	<includes>
						<include>org/cooperari/sanity/AllOtherTests.java</include>
					</includes> 
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>.</classpathPrefix>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>create-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>create-distro</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
