<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.cooperari</groupId>
	<artifactId>cooperari</artifactId>
	<version>0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Cooperari</name>
	<description>Cooperari is a cooperative testing tool for multithreaded Java software.</description>
	<url>http://cooperari.org</url>
	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>
	<properties>
		<required.java>1.8</required.java>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skip.mutation.testing>true</skip.mutation.testing>
	</properties>

	<dependencies>
		<!-- Sun Tools -->
		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>tools</artifactId>
			<version>1.8.0</version>
			<scope>system</scope>
			<systemPath>${java.home}/../lib/tools.jar</systemPath>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<!-- AspectJ runtime -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.5</version>
		</dependency>
		<!-- AspectJ tools (compiler in particular) -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>1.8.5</version>
		</dependency>
		<!-- AspectJ weaving API -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.5</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<fail>true</fail>
							<failFast>true</failFast>
							<rules>
								<requireJavaVersion>
									<message>Java version ${required.java} or higher is required!
										Version ${java.version} detected ...
									</message>
									<version>${required.java}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<configuration>
					<ignoreMissingFile>false</ignoreMissingFile>
					<regex>false</regex>
					<replacements>
						<replacement>
							<token>@cooperari.version@</token>
							<value>${project.version}</value>
						</replacement>
						<replacement>
							<token>@build.os@</token>
							<value>${os.name} ${os.version} ${os.arch}</value>
						</replacement>
						<replacement>
							<token>@build.maven.version@</token>
							<value>${maven.version}</value>
						</replacement>
						<replacement>
							<token>@build.java.version@</token>
							<value>${java.version}</value>
						</replacement>
						<replacement>
							<token>@build.java.vm@</token>
							<value>${java.vm.name}</value>
						</replacement>
					</replacements>
				</configuration>
				<executions>
					<execution>
						<id>version-class</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>src/main/java/org/cooperari/CVersion.java.template</file>
							<outputFile>src/main/java/org/cooperari/CVersion.java</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>create-cversion-script</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<ignoreMissingFile>false</ignoreMissingFile>
							<file>src/main/assembly/bin/cversion.template</file>
							<outputFile>src/main/assembly/bin/cversion</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<fork>true</fork>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${required.java}</source>
					<target>${required.java}</target>
					<testSource>${required.java}</testSource>
					<testTarget>${required.java}</testTarget>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>setup-cooperative-tests</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<classpathScope>test</classpathScope>
							<workingDirectory>${project.build.directory}/test-execution</workingDirectory>
							<outputFile>${project.build.directory}/test-execution/csetup-output.txt</outputFile>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>org.cooperari.tools.csetup.Main</argument>
								<argument>-v</argument>
								<argument>-d</argument>
								<argument>.</argument>
								<argument>-k</argument>
								<argument>org.cooperari.sanity.feature.TestSetup</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>setup-example-tests</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<classpathScope>test</classpathScope>
							<workingDirectory>${project.build.directory}/examples-execution</workingDirectory>
							<outputFile>${project.build.directory}/examples-execution/csetup-output.txt</outputFile>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>org.cooperari.tools.csetup.Main</argument>
								<argument>-v</argument>
								<argument>-d</argument>
								<argument>.</argument>
								<argument>-k</argument>
								<argument>org.cooperari.examples.AllExamples</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>cooperative-tests</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<workingDirectory>${project.build.directory}/test-execution</workingDirectory>
							<classpathScope>test</classpathScope>
							<commandlineArgs>-classpath ${project.build.directory}/test-execution/org.cooperari.sanity.feature.TestSetup-cooperari.jar:%classpath -javaagent:${org.aspectj:aspectjweaver:jar} -Daj.class.path=${project.build.directory}/test-execution/org.cooperari.sanity.feature.TestSetup-cooperari.jar:%classpath org.cooperari.tools.cjunit.Main . org.cooperari.sanity.AllCooperativeTests</commandlineArgs>
						</configuration>
					</execution>
					<execution>
						<id>cooperative-examples</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<workingDirectory>${project.build.directory}/examples-execution</workingDirectory>
							<classpathScope>test</classpathScope>
							<commandlineArgs>-classpath ${project.build.directory}/examples-execution/org.cooperari.examples.AllExamples-cooperari.jar:%classpath -javaagent:${org.aspectj:aspectjweaver:jar} -Daj.class.path=${project.build.directory}/test-execution/org.cooperari.examples.AllExamples-cooperari.jar:%classpath org.cooperari.tools.cjunit.Main . org.cooperari.examples.AllExamples</commandlineArgs>
						    <successCodes>
						      	<successCode>0</successCode>
						      	<successCode>1</successCode>
						    </successCodes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skipTests>false</skipTests>
					<forkCount>1</forkCount>
					<enableAssertions>false</enableAssertions>
					<includes>
						<include>org/cooperari/sanity/AllOtherTests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.2.0</version>
				<configuration>
					<targetClasses>
						<param>org.cooperari.core.CConfiguration</param>
						<param>org.cooperari.core.CUncaughtExceptionHandler</param>
						<param>org.cooperari.core.util.*</param>
					</targetClasses>
					<targetTests>
						<param>org.cooperari.sanity.AllPITMutationTests</param>
					</targetTests>
					<mutators>
						<mutator>DEFAULTS</mutator>
						<mutator>REMOVE_CONDITIONALS</mutator>
					</mutators>
					<timestampedReports>false</timestampedReports>
					<skip>${skip.mutation.testing}</skip>
				</configuration>
				<executions>
					<execution>
						<id>pit-test</id>
						<phase>test</phase>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>.</classpathPrefix>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<show>package</show>
					<author>true</author>
					<version>true</version>
					<detectLinks>false</detectLinks>
					<linksource>false</linksource>
					<keywords>false</keywords>
					<use>true</use>
					<windowtitle>Cooperari API</windowtitle>
					<encoding>UTF-8</encoding>
					<locale>en</locale>
					<javadocVersion>${required.java}</javadocVersion>
					<javaApiLinks>
						<property>
							<name>api_${required.java}</name>
							<value>http://docs.oracle.com/javase/8/docs/api</value>
						</property>
					</javaApiLinks>
					<verbose>true</verbose>
					<minmemory>32m</minmemory>
					<maxmemory>128m</maxmemory>
					<failOnError>true</failOnError>
					<includeDependencySources>false</includeDependencySources>
					<excludePackageNames>org.cooperari.app,org.cooperari.preemptive,org.cooperari.tools</excludePackageNames>
				</configuration>
				<executions>
               		<execution>
            			<phase>prepare-package</phase>
                		<id>attach-javadocs</id>
            			<goals>
                			<goal>javadoc</goal>
            			</goals>
        			</execution>
    			</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>create-distro</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.5.1</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
